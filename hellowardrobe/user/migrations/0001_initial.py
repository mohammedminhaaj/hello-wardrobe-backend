# Generated by Django 4.1.3 on 2023-04-15 12:20

import common.models.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('mobile_number', models.CharField(db_index=True, max_length=10, unique=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='is user account active?')),
                ('is_staff', models.BooleanField(default=False, help_text='is user a Django admin?')),
                ('password', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', common.models.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserOtp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('mobile', models.CharField(max_length=10, verbose_name='Mobile Number')),
                ('otp', models.CharField(max_length=256, verbose_name='OTP')),
                ('expires_on', models.DateTimeField(verbose_name='OTP Expires on')),
                ('attempts', models.PositiveSmallIntegerField(default=0, verbose_name='Attempts')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('modified_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
            options={
                'db_table': 'user_otp',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(unpack_ipv4=True, verbose_name='IP address')),
                ('browser', models.CharField(default='Unknown', max_length=50)),
                ('os', models.CharField(default='Unknown', max_length=50)),
                ('device', models.CharField(default='Unknown', max_length=50)),
                ('is_successful', models.BooleanField()),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='login attempted at')),
                ('session_duration', models.SmallIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'login attempt',
                'verbose_name_plural': 'login attempts',
                'db_table': 'login_attempt',
                'get_latest_by': ['time'],
            },
        ),
    ]
